token
trim quotes
expander 
joiner
parser



testin bash    --->       > text ls


test  bash     --->       ls > a | cat < a   -----> indefined behavier




ls <> ls // i don't handel it
ls <<< ls // i don't handel it
<< 5< a  --------> syntax error near unexpected token `5'

<< del cat  >l | echo hello asking for this case


re"'$HOME'"   // don't remove double code befor expanding

"'$HOME'" => variable -> exp

re'"$HOME"' -> word without exp

'"$HOME"'   ---> word

export
    ---->   alphabet or tiri8


    ----->  export a=ls
    ----->  echo $a           -> ls
    ----->  export a+=last
    ----->  echo $a           -> lslast


    echo hello test | > test

echo  test | ls -la  > txt   eeee$HOME < test     --> segvault ou rien 



echo hello test > file dew


EXPLIQUE     ---> echo hello test > file $home




    echo  <  txt


        ----------------PARSER_LIST---------------
        √ cmd   --> (echo)
        √ cmd   --> (hello)
        √ cmd   --> ( )
        √ cmd   --> ()


cat << del ""
        cat: : No such file or directory


/***** bultins ******/
    echo    √
    export  √
    env     √
    exit    x
    pwd     x
    cd      x
    unset   x



/////////////////////  FIXED ///////////////////

cat << del""

we have error in space after echo ,we must remove it
echo  <<'del' "test" hello 

        parser count + 1 = | 6 |
        new_p->arg[0] = |echo|
        new_p->arg[1] = | |
        new_p->arg[2] = |test|
        new_p->arg[3] = | |
        new_p->arg[4] = |hello|
        new_p->arg[5] = |(null)|

LS > -la | echo >> test     white space in last cmd -> segmentation fault


me 
    echo -nnnnn -nnnnn hello world
    echo -nnnnn -nnnnna hello world

khalid   
        echo -nnnnn -nnnnn hello world
        echo -nnnnn -nnnnna hello world

ECHO -n   --------> segfault

explique why spaces is nor remove after FILE LIKE IN EXAPLE  :

    echo hello test > file khouribga    home < world   q            ll


<< e'' << d'' segfault
<< $USER   
    mel-kouc
    we shouldn't expand

echo >>> test

echo >>| test
echo >|> test
echo >>|> test

bash-3.2$ ls > | ls

ls >| txt seg fault

ls >| txt hello

        ----------------PARSER_LIST---------------
        √ cmd   --> (ls)
        √ 
        ***** fd int = -4 *****
        √ 
        ***** fd out = 3 *****

        ------------------------------------
        √ cmd   --> (hello)
        √ 
        ***** fd int = -4 *****
        √ 
        ***** fd out = -5 *****


bash-3.2$ ls >| ls
        bash ---> open a file ls

        my minishel open file |

ls  > hay < file > txt


the content of ls not in hay
because if a file is not open the command don't pass au execut

///////////////////////////////////////////////


$$$$$$$$$$$$$$$         LLDB        $$$$$$$$$$$$$$$$

        breakoint for lldb -----> breakpoint set --name main
        move step by step  ------> s
        move a big step    ------> n
        view the comntent     ------> v cmd   (cmd (char *cmd)= is the variable that we want to view)
        move a big step    ------> n


/***** bultins ******/
    echo    √ $$ --> pid
    export  √
    env     √
    exit    x
    pwd     x
    cd      x
    unset   x
    /***go crazy***
    ls >'|' | ls | echo hello --> filename '|' with content ls
    ls >"|"
    ls > '>' |ls | echo hello --> filename '|' with content ls

$$$$$$$$$$$$$$$$                   $$$$$$$$$$$$$$$$


problem

    if a have a file txt the test of bash
    ls >| txt hello

            ls: hello: No such file or directory   

    ls >| cat txt

    ls >|  txt



ls  > hay < file | ls > mmm

mmmm  have a content of ls
<< e'' << d'' segfault
<< $USER   
    mel-kouc
    we shouldn't expand



aplha && alpha alpha -- > 255 + exit
alpha + number --> 255 + exit
number_alpha --> 255 exit
------
number alpha --> 1 noexit too many arguments
number number --> 1 noexit too many arguments
-number --> oferflow + exit


cat < test


cat < test < test2 < test3 > out
echo world  < test2 < test3 > out < test

relink in all heder files
